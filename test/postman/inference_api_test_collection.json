{
	"info": {
		"_postman_id": "b5bb7e4c-d06a-4774-98ff-acbfcbd5a8f5",
		"name": "inference copy",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Model Zoo - Register Model",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "4eacca27-a4ca-4118-bd98-fe94767773e0",
						"exec": [
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200]);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "http://localhost:8081/models?url={{url}}&model_name={{model_name}}&initial_workers={{worker}}&synchronous={{synchronous}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8081",
					"path": [
						"models"
					],
					"query": [
						{
							"key": "url",
							"value": "{{url}}"
						},
						{
							"key": "model_name",
							"value": "{{model_name}}"
						},
						{
							"key": "initial_workers",
							"value": "{{worker}}"
						},
						{
							"key": "synchronous",
							"value": "{{synchronous}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Model Zoo - Inference Model",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "953ee5d2-07a4-448d-83c1-f91d68592cd4",
						"exec": [
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200]);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"content-type": true
				}
			},
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "file",
					"file": {
						"src": "{{file}}"
					}
				},
				"url": {
					"raw": "http://localhost:8080/predictions/{{model_name}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"predictions",
						"{{model_name}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Model Zoo - Inference Model with invalid model name",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d0cf77d3-12ce-4d6a-a95c-89fc7d3a60cd",
						"exec": [
							"pm.test(",
							"    \"Invalid Inference request \\t\" +",
							"    \"Exception code : \" + pm.response.code + \"\\t\" +",
							"    \"Exception Type : \" +pm.response.json().type + \"\\t\" +",
							"    \"Exception Message: \" +pm.response.json().message + \"\\t\" ,",
							"    function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([404]);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"content-type": true
				}
			},
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "file",
					"file": {
						"src": "{{file}}"
					}
				},
				"url": {
					"raw": "http://localhost:8080/predictions/squeezenet0_0",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"predictions",
						"squeezenet0_0"
					]
				}
			},
			"response": []
		},
		{
			"name": "Model Zoo - Inference Model with valid model name but invalid model version",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "55966989-1f9b-417f-8d37-3ba559606a0d",
						"exec": [
							"pm.test(",
							"    \"Invalid Inference request \\t\" +",
							"    \"Exception code : \" + pm.response.code + \"\\t\" +",
							"    \"Exception Type : \" +pm.response.json().type + \"\\t\" +",
							"    \"Exception Message: \" +pm.response.json().message + \"\\t\" ,",
							"    function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([404]);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"content-type": true
				}
			},
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "file",
					"file": {
						"src": "{{file}}"
					}
				},
				"url": {
					"raw": "http://localhost:8080/predictions/{{model_name}}/0.0",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"predictions",
						"{{model_name}}",
						"0.0"
					]
				}
			},
			"response": []
		}
	],
	"protocolProfileBehavior": {}
}